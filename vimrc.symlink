scriptencoding utf-8
set encoding=utf-8
""""" Vundle Setup
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

Plugin 'morhetz/gruvbox'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'vim-airline/vim-airline'
Plugin 'airblade/vim-gitgutter'
Plugin 'majutsushi/tagbar'
Plugin 'scrooloose/nerdtree'
Plugin 'Valloric/YouCompleteMe'
Plugin 'godlygeek/tabular'
Plugin 'w0rp/ale'
Plugin 'tpope/vim-obsession'
Plugin 'dhruvasagar/vim-prosession'

Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-unimpaired'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'

" All of your Plugins must be added before the following line
call vundle#end()            " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
filetype plugin indent on

" Automatic reloading of .vimrc
autocmd! bufwritepost .vimrc source %

" Disable automatic comment insertion
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" This trigger takes advantage of the fact that the quickfix window can be
" easily distinguished by its file-type, qf. The wincmd J command is
" equivalent to the Ctrl+W, Shift+J shortcut telling Vim to move a window to
" the very bottom (see :help :wincmd and :help ^WJ).
autocmd FileType qf wincmd J

" useful macros for the C language
autocmd FileType c let @i='I#include <jkA>jkj'
autocmd FileType c let @l='Iprintf("f,\n"A);jk==0t,F\i '

autocmd FileType asm setlocal commentstring=;\ %s
" Better copy & paste
" When you want to paste large blocks of code into vim, press F2 before you
" paste. At the bottom you should see ``-- INSERT (paste) --``.
set pastetoggle=<F2>

" Tab/space handling
set tabstop=4
set shiftwidth=4
set noexpandtab

function! TabToggle()
    if &expandtab
        set noexpandtab
    else
        set expandtab
    endif
endfunction

nmap <F9> :call TabToggle()<CR>

" mappings to replace tabs with spaces and viceversa
nnoremap <leader>et :execute "%!unexpand -t".&tabstop<ESC>
nnoremap <leader>es :execute "%!expand -t".&tabstop<ESC>

set cindent
set cinoptions+=g0

set ruler               " show line and column number
syntax on               " syntax highlighting

set relativenumber      " show line numbers
set number
set nowrap              " don't automatically wrap on load
set fo-=t               " don't automatically wrap text when typing

set history=700
set undolevels=700

" make search case insensitive
set hlsearch
set incsearch
set ignorecase
set smartcase

" default flag for search/replace
set gdefault

" TODO maybe set this into a autocmd
" set Perl keywords so that variables are treated as words
set iskeyword+=$,@-@,%

" Disable stupid backup and swap files - they trigger too many events
" for file system watchers
"set nobackup
"set nowritebackup
"set noswapfile

" Set the swap file directory
set directory=$HOME/.vim/swap_files//
" Set the backup dir
set backupdir=$HOME/.vim/backup_dir//

" tell it to use an undo file
set undofile
" set a directory to store the undo history
set undodir=~/.vim/undo/

let $BASH_ENV = "~/.bash_aliases"
" make space the leader key
map <space> \

" Show trailing whitespace:
highlight ExtraWhitespace ctermbg=red guibg=red
autocmd ColorScheme * highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

" Colour Scheme
set t_Co=256
colorscheme gruvbox
set background=dark

" ctags stuff
set tags=.tags;/

" configure the foldmethod
set foldmethod=syntax

" ensure that the files open without any folds
set foldlevelstart=99

" Search down into subfolders
" Provides tab-completion for all file-related tasks
set path+=**

" vim buffers
set hidden
set wildchar=<Tab> wildmenu wildmode=full

" set encryption to the strongest method
set cm=blowfish2

" this is already mapped by default
":nnoremap <Tab> <C-i>
nnoremap <S-Tab> <C-o>

" Make Y command logical
nnoremap Y y$

" Return to the last edit position when opening files
autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal! g`\"" |
    \ endif

set grepprg=ack
" execute project specific search defined by the ackp alias (quickfix list)
map <leader>sr :execute "cex system('ackp ".expand("<cword>")." -w -H')"<bar>cw<CR>
" execute a search in the current directory (quickfix list)
map <leader>sd :execute "cex system('ack --cc -w -H ".expand("<cword>")."')"<bar>cw<CR>
" execute a search in the current file (location list)
map <leader>sf :execute "cex system('ack --cc -w -H ".expand("<cword>")." ".expand("%")."')"<bar>cw<CR>

" remap grep back to Ack
command! -nargs=* Ack grep -H <args>
command! -nargs=* LAck lgrep -H <args>

" generate the next fibonacci element from the previous 2 lines
let @f='"ayiwk"byiwjo=a+bjk'

" map shortcut for make
nnoremap <leader>m :update<bar>make<cr>

" Vim Airline stuff
set laststatus=2
let g:airline_powerline_fonts=1
let g:airline#extensions#whitespace#enabled = 0

" vim-gitgutter
set updatetime=250

" fugitive
set diffopt+=vertical

" tagbar
nnoremap <silent> <leader>b :TagbarToggle<CR>

" tmux
let g:tmux_navigator_no_mappings = 1

nnoremap <silent> <c-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <c-j> :TmuxNavigateDown<cr>
nnoremap <silent> <c-k> :TmuxNavigateUp<cr>
nnoremap <silent> <c-l> :TmuxNavigateRight<cr>

" ALE
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'

let g:ale_linters = {
\   'perl': ['perl'],
\   'asm': [],
\}

" Tabularize shortcuts
" lowercase t for aligning only at the first occurence
" UPPERCASE T for aligning at all the occurences
nnoremap <leader>t, :Tabularize /^[^,]*,\zs<CR>
nnoremap <leader>T, :Tabularize /,\zs<CR>

nnoremap <leader>t: :Tabularize /^[^:]*:\zs<CR>
nnoremap <leader>T: :Tabularize /:\zs<CR>

nnoremap <leader>t= :Tabularize /^[^=]*\zs=<CR>
nnoremap <leader>T= :Tabularize /=<CR>

" for assembly alignment
nnoremap <leader>t<space> :Tabularize /\v^\s+\S+\zs/l0l4<CR>
nnoremap <leader>T<space> :Tabularize /\v\s+\S+\zs/l0l4<CR>

" YCM shortcuts
nnoremap <leader>gd :YcmCompleter GoTo<CR>
nnoremap <leader>gt :YcmCompleter GetType<CR>
nnoremap <leader>gi :YcmCompleter GetDoc<CR>
nnoremap <leader>gx :YcmCompleter FixIt<CR>

" YCM stuff
highlight Pmenu ctermfg=15 ctermbg=0
let g:ycm_extra_conf_globlist = ['~/work/*', ]
let g:ycm_show_diagnostics_ui = 0
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1

" NERDTree
map <C-n> :NERDTreeToggle<CR>

" quit buffer(window)
nnoremap <leader>q :bp<bar>bd#<CR>

" Break habit of using arrow keys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" <Direction> doesn't work in insert mode
inoremap <ESC>OA <Nop>
inoremap <ESC>OB <Nop>
inoremap <ESC>OC <Nop>
inoremap <ESC>OD <Nop>

vnoremap <down> <Nop>
vnoremap <left> <Nop>
vnoremap <right> <Nop>
vnoremap <up> <Nop>

" make typos work
command! WQ wq
command! Wq wq
command! W w
command! Q q

" use the very magic regex mode by remapping technique
nnoremap / /\v

" press jk instead of ESC to exit insert mode
inoremap jk <esc>

" remap capslock key to escape in xubuntu (add it in 'session and startup', 'application autostart')
" xmodmap -e "clear Lock" -e "keysym Caps_Lock = Escape"

set backspace=2

" (Hopefully) removes the delay when hitting esc in insert mode
set noesckeys
set ttimeout
set ttimeoutlen=1

" Display extra whitespace
set list listchars=tab:Â»Â·,trail:Â·
highlight SpecialKey ctermbg=16 ctermfg=235
